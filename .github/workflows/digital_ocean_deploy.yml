#Using DigitalOcean VM for hosting
name: DigitalOcean Hosting WebApp Container

on:
  push: 
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Verified Code
        uses: actions/checkout@v4
        # Checking is code is available, or, you know, up to par before build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
        # Login to my account in Docker Hub
        # The account is store in the ball, github secret key - only I know it, lol

      - name: Push container to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/ai-sea:latest
        # Push to containerize by running the script Dockerfile, check the code folder to see that file, also the Nginx config

      - name: Connect and Deploy to the DigitalOcean Droplet Ubuntu VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USERNAME}}
          key: ${{secrets.SSH_KEY}}
          port: 22
          script: |
            echo "${{secrets.DOCKER_PASSWORD}}" | docker login -u "${{secrets.DOCKER_USERNAME}}" --password-stdin
            docker pull ${{secrets.DOCKER_USERNAME}}/ai-sea:latest
            docker stop ai-sea || true
            docker rm ai-sea || true
            docker run -d --name ai-sea -p 80:80 -p 443:443 ${{secrets.DOCKER_USERNAME}}/ai-sea:latest
        # 1. Connect to the droplet docker app, login with username and password
        # 2. pull the latest image
        # 3. check - stop - remove any currently running instance of the containers
        # 4. Update and re-run the container with the lastest update/code with the config-ed port, check the nginx file for port number.
        # Noted: ${{secrets.SSH_KEY}} is the SSH PRIVATE KEY, aka the -----BEGIN OPENSSH PRIVATE KEY-----
        ## While the DigitalOcean Key you input is the PUBLIC KEY, don't mistake
        # Extra Noted: port 5173(port on server):5173(port on docker, this instance is Nginx config as 5173), because Nginx is being config to run on port 5173, not the default 80. Adjust accordingly